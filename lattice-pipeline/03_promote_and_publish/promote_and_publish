#!/bin/bash

set -e

upload_lattice_to_s3() {
    echo "upload to s3"
    aws s3 cp $lattice_tar_path "s3://lattice/lattice-latest.tgz"
    aws s3 cp $lattice_tar_path "s3://lattice/lattice-${new_lattice_version}.tgz"
    aws s3 cp lattice/Version "s3://lattice/Version"

    lattice_s3_url="http://lattice.s3.amazonaws.com/lattice-latest.tgz"
    echo $lattice_s3_url
}

extract_deliver_stories_message() {
git log $GO_FROM_REVISION_LATTICE..$GO_TO_REVISION_LATTICE | \
    egrep -io "\[\s*(?:Finishes|Fixes)\s*(#(\d+)\s*)+\]" | \
    perl -p -e 's/\[\s*(?:Finishes|Fixes)\s*((?:#[0-9]+\s*)+)\]/\[Delivers $1\]/gi'
}

bump_and_push_lattice() {
    pushd lattice
        previous_lattice_version=`cat Version`
        new_lattice_version=$((previous_lattice_version+1))
        echo $new_lattice_version > Version
        echo "Updating Version file: $previous_lattice_version -> $new_lattice_version"


        deliver_stories_message=$(extract_deliver_stories_message)
        git add Version
        git commit -m "Bump Version: $previous_lattice_version -> $new_lattice_version

        $deliver_stories_message

        +Committed by GOCD- Run #$GO_PIPELINE_LABEL of Pipeline: $GO_PIPELINE_NAME , Stage: $GO_STAGE_NAME, JOB: $GO_JOB_NAME
        "

        git pull origin master
        git pull origin develop
        git checkout master
        echo "merging master into develop"
        git merge develop -m "Merge branch 'master' of github.com:pivotal-cf-experimental/lattice into develop

        +Committed by GOCD- Run #$GO_PIPELINE_LABEL of Pipeline: $GO_PIPELINE_NAME , Stage: $GO_STAGE_NAME, JOB: $GO_JOB_NAME"

        echo "pushing local master to origin/master"
        git push origin master
        echo "Successfully pushed updates to origin/master"

        echo "pushing local develop to origin/develop"
        git pull --rebase origin develop
        git push origin develop
        echo "Successfully pushed updates to origin/develop"
    popd
}

setup_ssh_access_to_github() {
    echo "Running ssh-agent"
    eval `ssh-agent`
    aws s3 cp s3://lattice-gocd/credentials/ci_key ci_key
    chmod 600 ci_key
    ssh-add ci_key
}

if [ ${GO_FROM_REVISION_DIEGO_RELEASE} == ${GO_TO_REVISION_DIEGO_RELEASE} ] &&
    [ ${GO_FROM_REVISION_CF_RELEASE_RUNTIME_PASSED} == ${GO_TO_REVISION_CF_RELEASE_RUNTIME_PASSED} ] &&
    [ ${GO_FROM_REVISION_LATTICE} == ${GO_TO_REVISION_LATTICE} ]; then
    echo "No change in Lattice or its source code dependencies. Skipping publishing a new version."
    exit 0
fi

lattice_tar_path=$1

upload_lattice_to_s3

setup_ssh_access_to_github

bump_and_push_lattice

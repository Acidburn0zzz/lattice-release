#!/bin/bash

set -e

get_previous_cli_version() {
    pushd lattice-cli
        previous_cli_version=$(git tag -l --sort "-version:refname" "v[0-9]*" | head -1)
        echo "Previous cli version: $previous_cli_version"
    popd
}

sync_up_cli_tags_off_remote() {
    pushd lattice-cli
        git tag -l | xargs git tag -d
        git fetch --tags
    popd
}

check_if_cli_needs_bump() {
    echo "Checking if cli needs bump..."
    get_previous_cli_version

    pushd lattice-cli
        previous_cli_sha=$(git rev-parse $previous_cli_version)
        current_cli_sha=$(git rev-parse HEAD)

        if [ "$previous_cli_sha" != "$current_cli_sha" ]; then
            cli_needs_bump="true"
            echo "Detected changes to cli. Bump!"
        else
            echo "No new changes to cli. No bump needed"
            cli_needs_bump="false"
        fi
    popd
}

bump_cli_version() {
    get_previous_cli_version
    pushd lattice-cli
        previous_cli_version_number=${previous_cli_version:1} #get rid of the v
        new_cli_version="v$((previous_cli_version_number+1))" &&
        git tag -a "$new_cli_version" -m "$(date)" &&
        git push origin --tags
    popd

    echo "Bumped cli version from $previous_cli_version -> $new_cli_version and pushed tags"
}

compile_and_publish_cli() {
    mkdir -pv ltc-binaries

    tar xvzf ltc.tar.gz -C ltc-binaries

    aws s3 cp ltc-binaries/ltc-darwin-amd64 "s3://lattice/latest/darwin-amd64/ltc"
    aws s3 cp ltc-binaries/ltc-linux-amd64 "s3://lattice/latest/linux-amd64/ltc"
    aws s3 cp ltc-binaries/ltc-checksum "s3://lattice/latest/ltc-checksum"

    aws s3 cp ltc-binaries/ltc-darwin-amd64 "s3://lattice/${new_cli_version}/darwin-amd64/ltc"
    aws s3 cp ltc-binaries/ltc-linux-amd64 "s3://lattice/${new_cli_version}/linux-amd64/ltc"
    aws s3 cp ltc-binaries/ltc-checksum "s3://lattice/${new_cli_version}/ltc-checksum"

    echo "Successfully uploaded to s3"
}

sync_up_cli_tags_off_remote
check_if_cli_needs_bump

if [ $cli_needs_bump == "true" ]; then
    bump_cli_version
    compile_and_publish_cli
fi

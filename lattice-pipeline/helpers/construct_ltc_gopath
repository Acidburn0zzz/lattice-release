#!/bin/bash

set -e

if [ -z "$LATTICE_SRC_PATH" ]; then
    echo "Must set LATTICE_SRC_PATH"
    exit 1
fi

if [ -z "$DIEGO_RELEASE_PATH" ]; then
    echo "Must set DIEGO_RELEASE_PATH"
    exit 1
fi

mkdir -pv $GOPATH/src/github.com/cloudfoundry-incubator/lattice/
echo -n "Copying $LATTICE_SRC_PATH/ltc into compilation GOPATH .."
cp -af $LATTICE_SRC_PATH/ltc $GOPATH/src/github.com/cloudfoundry-incubator/lattice/ && echo "DONE!"

pushd $GOPATH/src/github.com/cloudfoundry-incubator/lattice/ltc > /dev/null
    ## godep restore is funky, so we manually copy our godeps back into the GOPATH.
    #echo -n "Copying $GOPATH/src/github.com/cloudfoundry-incubator/lattice/ltc/Godeps/_workspace/src/* into compilation GOPATH (Homegrown Godep restore) .."
    #cp -af Godeps/_workspace/src/* $GOPATH/src/ && echo "DONE!"
    ## errors suppressed
    set +e

    echo "go getting ./... from $(pwd)"
    go get -d -v ./...

    ## TODO: go get docker/docker separately and unpack its vendored deps.
    cp -af Godeps/_workspace/src/github.com/docker/docker/vendor/src/* $GOPATH/src/

    godep restore && echo "godep restored"

    ## errors unsuppressed
    set -e

    #echo "DONE!"
popd > /dev/null

echo -n "Deleting .git folders that are diego-release submodules .."
pushd $GOPATH
    grep submodule $DIEGO_RELEASE_PATH/.gitmodules | awk -F\" '{ print $2"/.git" }' | xargs rm -rf
popd
echo "DONE!"

echo -n "Copying $DIEGO_RELEASE_PATH/src/* into compilation GOPATH (Prefer Diego-Release dependencies over ltc's Godeps) .."
## locally, this copies all of lattice again because we usually develop lattice using diego-release as the GOPATH
cp -af $DIEGO_RELEASE_PATH/src/ $GOPATH/ && echo "DONE!"

echo "Copying over git modules for later godeps saves from constructed path .."
cp -af $DIEGO_RELEASE_PATH/.git* $GOPATH/ && echo "DONE!"

sync

// This file was generated by counterfeiter
package fake_target_verifier

import (
	"sync"

	"github.com/pivotal-cf-experimental/lattice-cli/config/target_verifier"
)

type FakeTargetVerifier struct {
	RequiresAuthStub        func(name string) bool
	requiresAuthMutex       sync.RWMutex
	requiresAuthArgsForCall []struct {
		name string
	}
	requiresAuthReturns struct {
		result1 bool
	}
}

func (fake *FakeTargetVerifier) RequiresAuth(name string) bool {
	fake.requiresAuthMutex.Lock()
	fake.requiresAuthArgsForCall = append(fake.requiresAuthArgsForCall, struct {
		name string
	}{name})
	fake.requiresAuthMutex.Unlock()
	if fake.RequiresAuthStub != nil {
		return fake.RequiresAuthStub(name)
	} else {
		return fake.requiresAuthReturns.result1
	}
}

func (fake *FakeTargetVerifier) RequiresAuthCallCount() int {
	fake.requiresAuthMutex.RLock()
	defer fake.requiresAuthMutex.RUnlock()
	return len(fake.requiresAuthArgsForCall)
}

func (fake *FakeTargetVerifier) RequiresAuthArgsForCall(i int) string {
	fake.requiresAuthMutex.RLock()
	defer fake.requiresAuthMutex.RUnlock()
	return fake.requiresAuthArgsForCall[i].name
}

func (fake *FakeTargetVerifier) RequiresAuthReturns(result1 bool) {
	fake.RequiresAuthStub = nil
	fake.requiresAuthReturns = struct {
		result1 bool
	}{result1}
}

var _ target_verifier.TargetVerifier = new(FakeTargetVerifier)

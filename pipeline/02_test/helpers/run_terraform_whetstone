#!/bin/bash
set -e

deploy_lattice() {
    pushd $TF_WORKING_DIR
        terraform get -update
        terraform apply || { echo "=====>First terraform apply failed. Retrying..."; terraform apply; }
    popd
}

cleanup(){
    set +e
    echo "Cleaning up terraform and related artifacts"
    pushd $TF_WORKING_DIR
        echo "Destroying once (should delete the instances, but fail to delete vpc resources)..."
        terraform destroy -force
        echo "Destroying one more time to get rid of the remaining vpc resources..."
        terraform destroy -force
    popd

    cp -fv $TF_WORKING_DIR/terraform.tfstate $WORKSPACE_DIR/
}

setup_and_run_whetstone(){
    source $WORKSPACE_DIR/diego-release/src/github.com/cloudfoundry-incubator/lattice/pipeline/02_test/helpers/setup_whetstone
    setup_whetstone

    echo "=========================Lattice Integration Tests=============================\n"

    printf "{\"Target\":\"%s\",\"Username\":\"%s\",\"Password\":\"%s\"}" \
        "$(cd $TF_WORKING_DIR && terraform output lattice_target)" \
        "$(cd $TF_WORKING_DIR && terraform output lattice_username)" \
        "$(cd $TF_WORKING_DIR && terraform output lattice_password)" | json_pp \
        > $LATTICE_CLI_HOME/.lattice/config.json
    sync

    ltc test -v --timeout=5m

    echo "===============================================================================\n"
}

generate_terraform_configuration_file(){
    print_provider_specific_terraform_configuration "$@" > "$TF_WORKING_DIR"/lattice.tf #defined in provider specific script that this file is sourced into
    sync
}

export DIEGO_RELEASE_PATH=$1
export LATTICE_TAR_PATH=$2
WORKSPACE_DIR=/workspace
export TF_WORKING_DIR=$HOME/terraform-work # ephemeral folder in docker context

mkdir -pv $TF_WORKING_DIR

trap cleanup EXIT

download_provider_specific_credentials #defined in provider specific script that this file is sourced into

generate_terraform_configuration_file
echo "== lattice.tf =="
    cat  $TF_WORKING_DIR/lattice.tf
echo "===="

deploy_lattice

setup_and_run_whetstone

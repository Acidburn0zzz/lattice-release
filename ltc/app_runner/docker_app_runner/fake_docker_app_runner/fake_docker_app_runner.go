// This file was generated by counterfeiter
package fake_docker_app_runner

import (
	"sync"

	"github.com/cloudfoundry-incubator/lattice/ltc/app_runner"
	"github.com/cloudfoundry-incubator/lattice/ltc/app_runner/docker_app_runner"
)

type FakeDockerAppRunner struct {
	CreateDockerAppStub        func(params app_runner.CreateAppParams) error
	createDockerAppMutex       sync.RWMutex
	createDockerAppArgsForCall []struct {
		params app_runner.CreateAppParams
	}
	createDockerAppReturns struct {
		result1 error
	}
}

func (fake *FakeDockerAppRunner) CreateDockerApp(params app_runner.CreateAppParams) error {
	fake.createDockerAppMutex.Lock()
	fake.createDockerAppArgsForCall = append(fake.createDockerAppArgsForCall, struct {
		params app_runner.CreateAppParams
	}{params})
	fake.createDockerAppMutex.Unlock()
	if fake.CreateDockerAppStub != nil {
		return fake.CreateDockerAppStub(params)
	} else {
		return fake.createDockerAppReturns.result1
	}
}

func (fake *FakeDockerAppRunner) CreateDockerAppCallCount() int {
	fake.createDockerAppMutex.RLock()
	defer fake.createDockerAppMutex.RUnlock()
	return len(fake.createDockerAppArgsForCall)
}

func (fake *FakeDockerAppRunner) CreateDockerAppArgsForCall(i int) app_runner.CreateAppParams {
	fake.createDockerAppMutex.RLock()
	defer fake.createDockerAppMutex.RUnlock()
	return fake.createDockerAppArgsForCall[i].params
}

func (fake *FakeDockerAppRunner) CreateDockerAppReturns(result1 error) {
	fake.CreateDockerAppStub = nil
	fake.createDockerAppReturns = struct {
		result1 error
	}{result1}
}

var _ docker_app_runner.DockerAppRunner = new(FakeDockerAppRunner)

// This file was generated by counterfeiter
package fake_secure_shell

import (
	"sync"

	config_package "github.com/cloudfoundry-incubator/lattice/ltc/config"
	"github.com/cloudfoundry-incubator/lattice/ltc/secure_shell"
)

type FakeSecureShell struct {
	ConnectToShellStub        func(appName string, instanceIndex int, config *config_package.Config) error
	connectToShellMutex       sync.RWMutex
	connectToShellArgsForCall []struct {
		appName       string
		instanceIndex int
		config        *config_package.Config
	}
	connectToShellReturns struct {
		result1 error
	}
}

func (fake *FakeSecureShell) ConnectToShell(appName string, instanceIndex int, config *config_package.Config) error {
	fake.connectToShellMutex.Lock()
	fake.connectToShellArgsForCall = append(fake.connectToShellArgsForCall, struct {
		appName       string
		instanceIndex int
		config        *config_package.Config
	}{appName, instanceIndex, config})
	fake.connectToShellMutex.Unlock()
	if fake.ConnectToShellStub != nil {
		return fake.ConnectToShellStub(appName, instanceIndex, config)
	} else {
		return fake.connectToShellReturns.result1
	}
}

func (fake *FakeSecureShell) ConnectToShellCallCount() int {
	fake.connectToShellMutex.RLock()
	defer fake.connectToShellMutex.RUnlock()
	return len(fake.connectToShellArgsForCall)
}

func (fake *FakeSecureShell) ConnectToShellArgsForCall(i int) (string, int, *config_package.Config) {
	fake.connectToShellMutex.RLock()
	defer fake.connectToShellMutex.RUnlock()
	return fake.connectToShellArgsForCall[i].appName, fake.connectToShellArgsForCall[i].instanceIndex, fake.connectToShellArgsForCall[i].config
}

func (fake *FakeSecureShell) ConnectToShellReturns(result1 error) {
	fake.ConnectToShellStub = nil
	fake.connectToShellReturns = struct {
		result1 error
	}{result1}
}

var _ secure_shell.SecureShell = new(FakeSecureShell)
